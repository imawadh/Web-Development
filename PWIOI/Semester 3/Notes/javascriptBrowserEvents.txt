What are Browser Events ? 
    Browser events are signals that something has happened in the browser (like a click, key press, scroll, or form submission). JavaScript can listen for and respond to these events.

The Event Object
    When an event occurs, JavaScript provides an event object with details like:

    1. event.type – event type (e.g., "click")
    2. event.target – the element that triggered the event
    3. event.clientX / clientY – mouse position (for mouse events)

JavaScript Browser Events
=========================
    Sender
    Subscriber
    Observer
    Delegate[Function pointer]
    Event Handler
    Event Listener


JavaScript Browser Events
=========================
    - Event is a message sent by sender to its subscriber in order to notify change.
    - Event follows a software design pattern called "Observer".
    - Observer is a communication pattern.
    - Event uses a function pointer mechanism. [Delegate = function pointer]

Syntax
======
    function InsertClick()
    {

    }
    <button onclick="InsertClick()">

    function InsertClick() { } 	=> Subscriber
    onclick="InsertClick()" 	=> Sender
    - Subscriber defines the actions to perform.
    - Sender triggers the actions.


    What is Event Handler? What is Event?
    onclick 	=> Event
    onclick		=> InsertClick() => EventHandler

What is EventListener ?
	document.querySelector("button").addEventListener("event",function(){})
	It allows an element to configure the event dynamically.
           (For dynamically created element to configure the event we use eventlistener)


Event Arguments:
    - It comprises of default and custom arguments.
    - Every event handler have 2 default arguments
        a) this
        b) event

    <button onclick="InsertClick(this, event)" id="" class="" name="">

    this  => sends information about current element. [button] id, name, class, width, height, value etc..
    event => sends information about current event.   [onclick] clientX, clientY, shiftKey, ctrlKey, altKey etc..

    syntax: 
        <button onclick = "insert(this,event)"> 
        function insert(obj,e){

            }

Note: 
    1. You can use any argument without order dependency.
        <button onclick = "insert(event,this)"> 
        <button onclick = "insert(this)"> 
        <button onclick = "insert(event)">

    2. It is also possible to send specific details 
        <button onclick = "insert(event.id)">


    Note: this,event are predefined objects which will be used while passing the arguments, where as while collecting we can collect with any variable names.



Browser Events
==============
    All javascript events are related to browser.
    Browser events be can configured to any element in a page.
    Browser events are classified into various categories
        a. Mouse Events
        b. keyboard Events
        c. Button Events
        d. Timer Events
        e. Touch Events
        f. Form Events
        g. Clipboard Events

Mouse Events
	a. onmouseover
	b. onmouseout
	c. onmousedown
	d. onmouseup
	e. onmousemove

    * onmouseover   : When we hover the mouse coursor on the element, browser would fire this event.

    * onmouseout    : When we release the mouse cursor up on the element, browser would fire this event.

    * onmousedown   : When we hold the mouse cursor down on the element, browser would fire this event.


Keyboard events
===============
  a. onkeyup
  b. onkeydown
  c. onkeypress (deprecated)


  Note: If we are using for a character then we go for "onkeyup & onkeydown"
      If we are using for a charactercode then we go for "onkeypress"
	Key event args are
		a. keyCode 	b. charCode 	c. which	d. shiftKey	e. ctrlKey	f. altKey


Mouse Click Events
==================
  a. ondbclick		:: double click
  b. oncontextmenu	:: right click[To do selection]
  c. onclick 		:: single click
  d. onselectstart  :: Dragging | selecting the text using mouse

Element state Events
====================
  a. onblur
  b. onchange
  c. onfocus
  d. onselectstart	:: started to select some content


ClipBoard Events
================
    oncut
    oncopy
    onpaste

    - Clipboard is the temporary memory for windows.
    - The content that you cut or copy is kept on clipboard.



