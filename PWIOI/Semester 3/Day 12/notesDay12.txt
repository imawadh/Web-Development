============================================================================================================


string object in javascript
============================================================================================================
     length             : number
     endsWith(string)   : boolean
     startsWith(string) : boolean

    eg#1
        let str='sachin@gmail.com'
        console.log(str.endsWith('@gmail.com'))// true

        let str='sachin@gmail.com'
        console.log(str.endsWith('@yahoo.com'))// false

        let str='IPL2025'
        console.log(str.startsWith('IPL'))// true

        let str='IPL2025'
        console.log(str.startsWith('ipl'))// false

    

============================================================================================================= 
     charAt(number): object(single data)
     charCodeAt(number): object(single data)

    Note: ASCII of a-z > 97 to 122
          ASCII of A-Z > 65 to 90

    eg: 
        let str='sachin'
        console.log(str.charAt(0)) //s

        let str='sachin'
        console.log(str.charCodeAt(0))
         115

    charCodeAt(number): if number is of null|undefined|NaN 
    		    it would adjust to '0'th index data.




================================================================================================================

indexOf(string): number
		  
 - If the specified string is present it returns index of that character
 	otherwise it returns -1.

================================================================================================================
slice() --- 
    It is used to extarct a the characters between specified index 
    
    Synatax :: 
            slice(start index, end index+1) :: string(return type) => It return characters from start index to end index .
                Rule :: 
                    forward Dirction Extraction
                    end index should be greater than start index else get empty string ...
            
            Parameters :: 
                startIndex(required) -
                    The position where extraction begins(inclusive).
                    If negative, it is treated as array.length + endIndex;
                endIndex(optional) -
                     The position where extraction stops(exclusive)
                     if negative, it is treated as array.length + endIndex




    Note :: slice(start, end)
        a. NaN -> 0
        b. null -> 0
        c. undefined   -> undefined
        d. true -> 0
        e. false -> 0
        
    e.g;
    let str = "sachinrameshtendulkar"
    console.log(str.slice(6,-5)) // rameshtend
    console.log(str.slice()) // sachinrameshtendulkar
    console.log(str.slice(null,null)) // 
    console.log(str.slice(NaN,NaN)) // 
    console.log(str.slice(undefined,undefined)) // sachinrameshtendulkar
    console.log(str.slice(NaN,undefined)) // sachinrameshtendulkar
    console.log(str.slice(NaN,false)) // 
    console.log(str.slice(NaN,true)) // s
    console.log(str.slice(false, false)) // 
    console.log(str.slice(false,true)) // s
    console.log(str.slice(true,true)) // 
    console.log(str.slice(null,undefined)) // sachinrameshtendulkar
    console.log(str.slice(undefined,null)) // 




    If I give nothing or undefined .... it is same ... 



================================================================================================================
substring() v/s substr() --
    substr() is depricated ...

   It can read the characters b/w the given index range.

	syntax: substring(startIndex,endIndex) : string  ==> endIndex can be -ve | +ve
		substring(startIndex): string 		 ==> It return from startindex to endindex-1

    eg: str.substring(7);     //from 7 till end of the String
        str.substring(7,15);  //from 7 till 14th index of the String
        str.substring(7,0);   //from 0 till 6th index of the String


    Parameters
    ----------
    startIndex (required) – The index where extraction begins (inclusive).
    endIndex   (optional) – The index where extraction stops (exclusive). 
    			If omitted, the substring extends to the end of the string.

    Key Points
    ----------
    If startIndex is greater than endIndex, they are swapped.
    If startIndex or endIndex is negative or NaN, they are treated as 0.
    If endIndex is omitted, it extracts up to the end of the string.










